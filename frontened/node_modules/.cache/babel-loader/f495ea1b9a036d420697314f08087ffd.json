{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/practice/java/BlogFair/frontened/src/components/AddPost.jsx\",\n    _s = $RefreshSig$();\n\nimport JoditEditor from 'jodit-react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Button, Card, CardBody, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { getAllCategories } from '../services/category-service';\nimport { doAddPost } from '../services/post-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = () => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    getAllCategories().then(data => {\n      setCategories(data);\n    });\n  }, []);\n  const [post, setPost] = useState({\n    'postTitle': '',\n    'postContent': '',\n    'categoryId': -1\n  }); // for editor\n\n  const editor = useRef(null);\n\n  const updateField = event => {\n    setPost({ ...post,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const updateContent = content => {\n    setPost({ ...post,\n      'postContent': content\n    });\n  };\n\n  const createPost = event => {\n    event.preventDefault();\n\n    if (post.postTitle.trim() === '') {\n      toast.error(\"Please enter post title\");\n      return;\n    }\n\n    if (post.postContent.trim() === '') {\n      toast.error(\"You can not add blank post\");\n      return;\n    }\n\n    if (post.categoryId === '') {\n      toast.error(\"Please select any category\");\n      return;\n    }\n\n    doAddPost(post).then(response => {\n      //console.log(response)\n      toast.success(\"Congrats !! Post has been created successfully.\");\n    }).catch(error => {\n      toast.error(\"Sorry !! Something went wrong.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow-sm mt-2\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: event => createPost(event),\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"postTitle\",\n              children: \"Enter Post Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"postTitle\",\n              type: \"text\",\n              value: post.postTitle,\n              name: \"postTitle\",\n              onChange: event => updateField(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"category\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"category\",\n              type: \"select\",\n              defaultValue: 0,\n              onChange: event => updateField(event),\n              name: \"categoryId\",\n              value: post.categoryId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"---Select Category---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.categoryId,\n                children: category.categoryTitle\n              }, category.categoryId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 24\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"content\",\n              children: \"Write your post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(JoditEditor, {\n              ref: editor,\n              onChange: newContent => updateContent(newContent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              className: \"ms-2\",\n              color: \"secondary\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPost, \"oAv3o1GvDw62tTx8oXGFHVAhqs0=\");\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["JoditEditor","React","useEffect","useRef","useState","toast","Button","Card","CardBody","Container","Form","FormGroup","Input","Label","getAllCategories","doAddPost","AddPost","categories","setCategories","then","data","post","setPost","editor","updateField","event","target","name","value","updateContent","content","createPost","preventDefault","postTitle","trim","error","postContent","categoryId","response","success","catch","map","category","categoryTitle","newContent"],"sources":["/home/dev/Documents/practice/java/BlogFair/frontened/src/components/AddPost.jsx"],"sourcesContent":["import JoditEditor from 'jodit-react'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { Button, Card, CardBody, Container, Form, FormGroup, Input, Label } from 'reactstrap' \nimport { getAllCategories } from '../services/category-service'\nimport { doAddPost } from '../services/post-service'\n\nconst AddPost=()=>{\n    const [categories,setCategories]=useState([])\n\n  useEffect(()=>{\n     getAllCategories().then((data)=>{\n      setCategories(data)\n     })\n  },[])\n\n  const [post, setPost]= useState({\n    'postTitle':'',\n    'postContent':'',\n    'categoryId':-1\n  })\n\n  // for editor\n    const editor = useRef(null)\n\n    const updateField=(event)=>{\n        setPost({\n          ...post,\n          [event.target.name]:event.target.value\n        })\n    }\n\n    const updateContent=(content)=>{\n      setPost({\n        ...post,\n        'postContent':content\n      })\n    }\n    const createPost=(event)=>{\n        event.preventDefault()\n        if(post.postTitle.trim()===''){\n          toast.error(\"Please enter post title\")\n          return\n        }\n        if(post.postContent.trim()===''){\n          toast.error(\"You can not add blank post\")\n          return\n        }\n        if(post.categoryId=== ''){\n          toast.error(\"Please select any category\")\n          return\n        }\n\n        doAddPost(post).then(response=>{\n          //console.log(response)\n          toast.success(\"Congrats !! Post has been created successfully.\")\n        }).catch(error=>{\n          toast.error(\"Sorry !! Something went wrong.\")\n        })\n    }\n\n    return(\n        <Container>\n        <Card className='shadow-sm mt-2'>\n          <CardBody>\n            <Form onSubmit={event=>createPost(event)}>\n              <FormGroup>\n                <Label for=\"postTitle\">\n                  Enter Post Title\n                </Label>\n                <Input id=\"postTitle\" type='text' value={post.postTitle}\n                name=\"postTitle\"\n                onChange={event=>updateField(event)} />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"category\">Select Category</Label>\n                <Input id=\"category\" \n                type='select' \n                defaultValue={0}\n                 onChange={event=>updateField(event)}\n                 name=\"categoryId\"\n                 value={post.categoryId}\n                 >\n                  <option value={0}>---Select Category---</option>\n                  {\n                    categories.map(category=>(\n                       <option value={category.categoryId} key={category.categoryId} >{category.categoryTitle}</option>\n                    ))\n                  }\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for='content'>Write your post</Label>\n                {/* <Input type='textarea' id=\"content\" style={{height:\"225px\"}}></Input> */}\n                <JoditEditor\n                ref={editor}\n                onChange={newContent=>updateContent(newContent)}\n                >\n\n                </JoditEditor>\n              </FormGroup>\n              <Container className='text-center'>\n                <Button type='submit' color='primary'>Submit</Button>\n                <Button type=\"reset\" className='ms-2' color='secondary'>Reset</Button>\n              </Container>\n            </Form>\n          </CardBody>\n        </Card>\n      </Container>\n    )\n}\n\nexport default AddPost"],"mappings":"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"},"metadata":{},"sourceType":"module"}