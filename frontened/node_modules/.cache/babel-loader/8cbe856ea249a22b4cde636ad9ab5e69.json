{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"../auth/index.js\";\nexport const BASE_URL = 'http://localhost:9090/';\nexport const myAxios = axios.create({\n  baseURL: BASE_URL\n});\nexport const privateAxios = axios.create({\n  baseURL: BASE_URL\n});\nprivateAxios.interceptors.request.use(config => {\n  const token = getToken();\n\n  if (token) {\n    config.headers.common.Authorization = `Bearer ${token}`;\n    return config;\n  }\n}, error => Promise.reject(error));","map":{"version":3,"names":["axios","getToken","BASE_URL","myAxios","create","baseURL","privateAxios","interceptors","request","use","config","token","headers","common","Authorization","error","Promise","reject"],"sources":["/home/dev/Documents/practice/java/BlogFair/frontened/src/services/helper.js"],"sourcesContent":["import axios from \"axios\";\nimport {getToken} from \"../auth/index.js\"\n\nexport const BASE_URL='http://localhost:9090/';\n\nexport const myAxios = axios.create({\n    baseURL:BASE_URL\n})\n\nexport const privateAxios = axios.create({\n    baseURL:BASE_URL\n})\n\nprivateAxios.interceptors.request.use(config=>{\n    const token = getToken()\n    if(token){\n        config.headers.common.Authorization=`Bearer ${token}`\n        return config\n    }\n},error=>Promise.reject(error))"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAC,wBAAf;AAEP,OAAO,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;EAChCC,OAAO,EAACH;AADwB,CAAb,CAAhB;AAIP,OAAO,MAAMI,YAAY,GAAGN,KAAK,CAACI,MAAN,CAAa;EACrCC,OAAO,EAACH;AAD6B,CAAb,CAArB;AAIPI,YAAY,CAACC,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAsCC,MAAM,IAAE;EAC1C,MAAMC,KAAK,GAAGV,QAAQ,EAAtB;;EACA,IAAGU,KAAH,EAAS;IACLD,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,aAAtB,GAAqC,UAASH,KAAM,EAApD;IACA,OAAOD,MAAP;EACH;AACJ,CAND,EAMEK,KAAK,IAAEC,OAAO,CAACC,MAAR,CAAeF,KAAf,CANT"},"metadata":{},"sourceType":"module"}